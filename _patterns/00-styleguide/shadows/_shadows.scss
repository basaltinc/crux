@function crux-get-shadows-map($base-color: rgb(6, 10, 36)) {
  $crux-shadows: (
    'utility-class-prefix': 'crux-shadow--',
    'sets': (
      'inset': (
        'base': 'inset 0 1px 3px rgba(0,0,0,0.12), inset 0 1px 2px rgba(0,0,0,0.24)',
        'lifted': ''
      ),
      'xsmall': (
        'base': '0 1px 2px 1px #{transparentize($base-color, .92)}',
        'raised': ''
      ),
      'small': (
        'base': '0 1px 4px 1px #{transparentize($base-color, .90)}, 0 5px 10px 0 #{transparentize($base-color, .92)}',
        'raised': '0 1px 8px 1px #{transparentize($base-color, .82)}, 0 5px 10px 1px #{transparentize($base-color, .85)}, 0 15px 30px 0 #{transparentize($base-color, .84)}'
      ),
      'medium': (
        'base': '0 8px 15px 1px #{transparentize($base-color, .90)}, 0 18px 24px 1px #{transparentize($base-color, .88)}',
        'raised': '0 8px 15px 1px #{transparentize($base-color, .90)}, 0 24px 36px 1px #{transparentize($base-color, .82)}, 0 35px 50px 0 #{transparentize($base-color, .75)}'
      ),
      'large': (
        'base': '0 10px 20px 1px #{transparentize($base-color, .90)}, 0 24px 36px 1px #{transparentize($base-color, .82)}',
        'raised': '0 10px 20px 1px #{transparentize($base-color, .90)}, 0 36px 49px 1px #{transparentize($base-color, .80)}, 0 45px 65px 0 #{transparentize($base-color, .70)}'
      ),
      'xlarge': (
        'base': '0 10px 30px 1px #{transparentize($base-color, .90)}, 0 40px 48px 1px #{transparentize($base-color, .75)}',
        'raised': '0 10px 30px 1px #{transparentize($base-color, .90)}, 0 50px 70px 1px #{transparentize($base-color, .80)}, 0 55px 80px 0 #{transparentize($base-color, .70)}'
      )
    )
  );
  @return $crux-shadows;
}

$crux-shadows: crux-get-shadows-map();

@mixin crux-shadow($key: 'G', $lifted: false, $base-color: false, $utility: false) {
  $shadows: map-get(crux-get-shadows-map(), 'sets');
  @if $base-color {
    $shadows: map-get(crux-get-shadows-map($base-color), 'sets');
  }
  $important: '';

  @if $utility {
    $important: '!important';
  }
  @if not(map-has-key($shadows, $key)) {
    @error 'A value, #{$key}, was passed into @include crux-shadow() that is not defined in $crux-shadows';
  } @else {
    @if $lifted {
      transform: translateY(-2px) #{$important};
      box-shadow: unquote(map-get(map-get($shadows, $key), 'raised')) #{$important};
    } @else {
      transition: all 0.3s cubic-bezier(.25,.8,.25,1) #{$important};
      box-shadow: unquote(map-get(map-get($shadows, $key), 'base')) #{$important};
    }
  }
}

$shadows: map-get($crux-shadows, 'sets');

@each $key, $value in $shadows {
  $prefix: map-get($crux-shadows, 'utility-class-prefix');
  .#{$prefix}#{$key} {
    @include crux-shadow($key, $lifted: false, $utility: true);
  }
  .#{$prefix}#{$key}--animated {
    @include crux-shadow($key, $lifted: false, $utility: true);
    &:active,
    &:focus,
    &:hover {
      @include crux-shadow($key, $lifted: true, $utility: true);
    }
  }
}
