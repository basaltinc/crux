
/// Center.
/// Center an element vertically and/or horizontally in its container. Option to undo.
/// @param $horizontally [true] - center horizontally
/// @param $vertically [true] - center vertically
/// @param $absolute [false] - position absolutely, rather than relatively
/// @param $undo [false] - undo vertical centering on an element it was previously applied to
@mixin center($horizontally: true, $vertically: true, $absolute: false, $undo: false) {
  display: inline-block;
  @if ($absolute) {
    position: absolute;
  } @else {
    position: relative;
  }
  @if ($horizontally == true and $vertically == true) {
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
  }

  @if ($vertically == true and $horizontally == false) {
    top: 50%;
    transform: translateY(-50%);
  }

  @if ($horizontally == true and $vertically == false) {
    left: 50%;
    transform: translateX(-50%);
  }

  @if ($undo) {
    position: static;
    left: auto;
    transform: none;
  }
}

/// Mixin - Local Base
/// Set HTML font sizing base for global/local sizing (rem/em).
/// @link https://css-tricks.com/rem-global-em-local/
@mixin local-base() {
  font-size: 1rem; // 16px (default)
}

.local-base {
  @include local-base();
}

/// Word Wrap fix for long spaceless strings
/// @link https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/
@mixin word-wrap() {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  hyphens: auto;
}

/// Ellipsis fix for long spaceless strings
/// @link https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/
@mixin ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

///
.u-hide {
  display: none !important; //stylelint-disable-line declaration-no-important
  visibility: hidden !important; //stylelint-disable-line declaration-no-important
}

///
@mixin clearfix() {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

///
.u-clearfix,
.clearfix {
  @include clearfix;
}

///
@mixin overlay($color: #fff, $opacity: 0.3) {
  &:before {
    display: block;
    position: absolute;
    content: " ";
    background-color: rgba($color, $opacity);
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    transition: background-color $trans-opacity;
  }
}

.u-overlay {
  @include overlay();
}

[data-linkto] {
  cursor: pointer;
}
